var mongo=require("mongodb");
var host="localhost";
var server=new mongo.Server(host,27017,{auto_reconnect:true});//创建数据库所在的服务器服务器
var db=new mongo.Db("test",server,{safe:true});//创建数据库对象
var macObj = require('getmac');

var signVerify={};
    signVerify.auth=function(collectionId,callback){
	db.open(function (err,db) {
	    db.collection(collectionId,function(err,collection){
	    	if(err) throw err;
	        else{
	        	callback.call(db,collection);
	        }
	    });
	});
	signVerify.verification=function(req,res,redirect,callback){
		db.open(function (err,db) {
		    db.collection("singlelogin",function(err,collection){
		    	if(err) throw err;
		        else{
		        	var Cookies={};
		        	if(req.headers.cookie){
			        	req.headers.cookie.split(';').forEach(function( Cookie ) {
					        var parts = Cookie.split('=');
					        if(parts[ 0 ].trim()=="username")
					        	Cookies[ parts[ 0 ].trim() ] = ( parts[ 1 ] || '' ).trim();
					        if(parts[ 0 ].trim()=="clientId")
					        	Cookies[ parts[ 0 ].trim() ] = (parts[ 1 ] || '' ).trim();
					    });
		        	}
		        	//var clientId=uuid.v1();
		        	var userAgent=req.headers["user-agent"];
		        	console.log(userAgent);
		        	if(Cookies.clientId){

		        		macObj.getMac(function(err,mac){
						    if (err)  throw err;
						   	else{
							   	var Address=(req.headers['x-forwarded-for'] || req.connection.remoteAddress || req.socket.remoteAddress || req.connection.socket.remoteAddress)+mac;
					        	collection.findOne({clientId:Cookies.clientId,Address:Address,userAgent:userAgent},function (err,docs){
					        		if(err) throw err;
					        		else{
					        			//console.log(Address);
								   		if(docs){
						        			var time=new Date().getTime();
					        				if((parseInt(time)-parseInt(docs.time))<600*1000){
					        					res.setHeader('Set-Cookie', [ 'username='+docs.username+';path=/;max-age=600','clientId='+docs.clientId+';path=/;max-age=600']);
					        					collection.updateOne(
													  {username:docs.username,password:docs.password,clientId:Cookies.clientId,Address:Address,userAgent:userAgent},
													  {$set:{time:time}},
													  function(err,docs){
													  	if(err) throw err;
													  	else{
													  		db.close();
														  	callback.call(db,collection);
														}
													  });
					        				}else{

					        					if(redirect!="/")
													res.redirect(redirect||"/login");
												else
													res.render("login");

					        					db.close();
					        				}
								        }else{
								        	if(redirect!="/")
												res.redirect(redirect||"/login");
											else
												res.render("login");

											db.close();	
					        			}
					        		}
						        });
					        }

						});
		        	}else{
		        		if(redirect!="/")
							res.redirect(redirect||"/login");
						else
							res.render("login");
						
					    db.close();
		        	}
		        	
		        }
		    });
		});
	}
}
module.exports = signVerify;