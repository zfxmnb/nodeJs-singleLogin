var mongo=require("mongodb");
var host="localhost";
var server=new mongo.Server(host,27017,{auto_reconnect:true});//创建数据库所在的服务器服务器
var db=new mongo.Db("test",server,{safe:true});//创建数据库对象
//var macObj = require('getmac');
var config = require('config');

var signVerify={};
	signVerify.resetUserInfo=function(req,res){
		db.open(function (err,db) {
		    db.collection("user",function(err,collection){
		    	if(err) throw err;
		        else{
		        	console.log(req.body)
		        	if(req.body.name&&req.body.name.length<12&&req.body.username){
		        		collection.updateOne({username:req.body.username},{$set:{name:req.body.name}},function(err){
		        			res.end("{msg:ok}");
		        			db.collection("singlelogin",function(err,collection){
						    	if(err) throw err;
						        else{
						        	collection.updateOne({username:req.body.username},{$set:{name:req.body.name}},function(err){
						        		db.close();
						        	})
						        }
					        });
		        		})
		        	}else{
		        		res.end("{msg:err}");
		        		db.close();
		        	}
		        }
		    });
		});
	}
	signVerify.verification=function(req,res,redirect,origin,callback){
		db.open(function (err,db) {
		    db.collection("singlelogin",function(err,collection){
		    	if(err) throw err;
		        else{
		        	//获取cookies
		        	var Cookies={};
		        	if(req.headers.cookie){
			        	req.headers.cookie.split(';').forEach(function( Cookie ) {
					        var parts = Cookie.split('=');
					        if(parts[ 0 ].trim()=="username")
					        	Cookies[ parts[ 0 ].trim() ] = ( parts[ 1 ] || '' ).trim();
					        if(parts[ 0 ].trim()=="clientId")
					        	Cookies[ parts[ 0 ].trim() ] = parts[ 1 ] || '';
					        if(parts[ 0 ].trim()=="tempId")
					        	Cookies[ parts[ 0 ].trim() ] = (parts[ 1 ] || '' ).trim();
					    });
		        	}
		        	//var clientId=uuid.v1();
		        	//获取浏览器信息

		        	if(Cookies.clientId&&Cookies.clientId!=null&&Cookies.username&&Cookies.username!=null&&Cookies.tempId&&Cookies.tempId!=null){
		        				var userAgent=req.headers["user-agent"];
							   	var ipAddress=(req.headers['x-forwarded-for'] || req.connection.remoteAddress || req.socket.remoteAddress || req.connection.socket.remoteAddress);
					        	collection.findOne({clientId:Cookies.clientId,tempId:Cookies.tempId,username:Cookies.username,ipAddress:ipAddress,userAgent:userAgent},function (err,docs){
					        		if(err) throw err;
					        		else{
					        			//已登陆
								   		if(docs){
								   			//获取新的时间
						        			var time=new Date().getTime();
					        				if((time-parseInt(docs.time))<(config.expires*60000)){
					        					var nickname=docs.name||docs.username;
					        					var userinfo={username:docs.username,name:nickname};
					        					callback.call(db,collection,userinfo);
					        					//登陆未过期
					        					collection.updateOne(
													  {	clientId:docs.clientId,
													  	username:docs.username,
													  	password:docs.password,
													  	tempId:docs.tempId,
													  	ipAddress:ipAddress,
													  	userAgent:userAgent},
													  {
													  	$set:{time:time}
													  },
													  function(err,docs){
													  	if(err) throw err;
													  	else{
													  		db.close();
														}
													  });
					        				}else{
					        				//登陆已过期
					        					var Referer=encodeURIComponent(origin);
												res.redirect(redirect+"?target="+Referer);
					        					db.close();
					        				}
								        }else{
								        //未登录
								       		var Referer=encodeURIComponent(origin);
											res.redirect(redirect+"?target="+Referer);
											db.close();
					        			}
					        		}
						        });
		        	}else{
		        	//cookie不存在
		        		var Referer=encodeURIComponent(origin);
						res.redirect(redirect+"?target="+Referer);
					    db.close();
		        	}
		        }
		    });
		});
	}
module.exports = signVerify;